  <execution>
            <id>bower install</id>
            <goals>
              <goal>bower</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>

          <execution>
            <id>jspm install</id>
            <goals>
              <goal>jspm</goal>
            </goals>
            <configuration>
              <arguments>--version</arguments>
            </configuration>
          </execution>

          <execution>
            <id>grunt build</id>
            <goals>
              <goal>grunt</goal>
            </goals>
            <configuration>
              <arguments>--no-color</arguments>
            </configuration>
          </execution>

          <execution>
            <id>gulp build</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>gulp</goal>
            </goals>
            <configuration>
              <environmentVariables>
                <NODE_ENV>production</NODE_ENV>
              </environmentVariables>
            </configuration>
          </execution>

          <execution>
            <id>javascript tests</id>
            <goals>
              <goal>karma</goal>
            </goals>
            <configuration>
              <karmaConfPath>src/test/javascript/karma.conf.ci.js</karmaConfPath>
            </configuration>
          </execution>
          
          
          
          
          
     ok

          
          
          mvn spring-boot:run
          java -jar target/myapplication-0.0.1-SNAPSHOT.jar
       
       
          
          https://medium.com/@benjaminliu_42474/how-to-setup-spring-boot-with-reactjs-and-webpack-9b190edeb0c8

          npm i -D css-loader style-loader
          
          
       =========Docker commands=============   
       Docker Build Image:      docker build -f DockerFile -t dockerspringboot  .
       List Images:    			docker images -a   
       remove all dangling images: docker images purge
       to run docker image:        docker run -p 8090:8090 dockerspringboot       
       List all containers (only IDs) : docker ps -aq
	   Stop all running containers :     docker stop $(docker ps -aq)
	   Remove all containers	  :  docker rm $(docker ps -aq)
	   Remove all images :       docker rmi $(docker images -q)
	   
	   
	   ===================================